{
  "name": "khakishop",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3000",
    "dev:stable": "NODE_OPTIONS='--max-old-space-size=4096' next dev -p 3000 --turbo",
    "dev:light": "DISABLE_ESLINT_PLUGIN=true NODE_OPTIONS='--max-old-space-size=4096' next dev -p 3000",
    "dev:safe": "next dev -p 3000",
    "dev:debug": "NODE_OPTIONS='--max-old-space-size=4096 --inspect' next dev -p 3000",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "test": "tsc --noEmit && echo '✅ TypeScript 컴파일 검증 완료'",
    "test:types": "tsc --noEmit",
    "prepare": "husky install",
    "clean": "rm -rf .next",
    "fresh": "npm run clean && npm run dev",
    "reset": "rm -rf .next && rm -rf node_modules/.cache && npm run dev",
    "postbuild": "next-sitemap",
    "health-check": "node scripts/health-check.js",
    "pre-deploy": "npm run health-check && npm run build",
    "safe-deploy": "npm run pre-deploy && npm run start",
    "validate-imports": "node scripts/health-check.js",
    "check-structure": "echo '🏗️ 프로젝트 구조 점검...' && npm run health-check",
    "a11y-test": "node scripts/a11y-test.js",
    "lighthouse": "lighthouse http://localhost:3000/ko --view",
    "lighthouse:pwa": "lighthouse http://localhost:3000/ko --only-categories=pwa --output=html --output-path=./test-results/pwa-report.html",
    "test-pages": "echo '🧪 주요 페이지 테스트:' && curl -s -o /dev/null -w 'Home (ko): %{http_code}\\n' http://localhost:3000/ko && curl -s -o /dev/null -w 'Collection: %{http_code}\\n' http://localhost:3000/ko/collection && curl -s -o /dev/null -w 'About: %{http_code}\\n' http://localhost:3000/ko/about && curl -s -o /dev/null -w 'Error Test: %{http_code}\\n' http://localhost:3000/ko/error-test && curl -s -o /dev/null -w '404 Test: %{http_code}\\n' http://localhost:3000/ko/non-existent-page",
    "pwa-test": "echo '📱 PWA 파일 테스트:' && curl -s -o /dev/null -w 'Manifest: %{http_code}\\n' http://localhost:3000/manifest.json && curl -s -o /dev/null -w 'SW: %{http_code}\\n' http://localhost:3000/sw.js",
    "process-images": "node scripts/processImage.js",
    "generate-prompts": "node scripts/generatePrompts.js",
    "generate-specific-prompts": "node scripts/generateSpecificPrompts.js",
    "process-single": "node scripts/processImage.js",
    "process-bulk": "node scripts/processBulkImages.js",
    "smart-scan": "node scripts/smartImageManager.js",
    "assign-pending": "node scripts/assignPendingImages.js",
    "check-images": "echo '🔍 이미지 파일 확인:' && ls -la /Users/kiholee/Projects/Midjourney/*.png 2>/dev/null | wc -l && echo '개의 PNG 파일이 발견되었습니다.'",
    "image-status": "node -e \"console.log('📊 이미지 상태 요약:'); const status = require('./scripts/imageStatus.json'); console.log('✅ 활성:', Object.keys(status.status || {}).length); console.log('⏳ 대기:', Object.keys(status.pending || {}).length); console.log('❌ 오류:', Object.keys(status.errors || {}).length);\"",
    "clean-processed": "rm -rf public/images/*/",
    "backup-midjourney": "cp -r /Users/kiholee/Projects/Midjourney /Users/kiholee/Projects/Midjourney_backup_$(date +%Y%m%d_%H%M%S)",
    "image-help": "echo '🎨 KHAKISHOP 이미지 관리 명령어:' && echo '' && echo '📊 상태 확인:' && echo '  npm run smart-scan     - 스마트 스캔 및 자동 처리' && echo '  npm run image-status   - 현재 상태 요약' && echo '' && echo '🔄 이미지 처리:' && echo '  npm run process-bulk   - 148개 기본 이미지 처리 (레거시)' && echo '  npm run assign-pending - 대기 이미지 수동 할당' && echo '' && echo '🛠️ 유틸리티:' && echo '  npm run check-images   - 원본 파일 개수 확인' && echo '  npm run backup-midjourney - 원본 폴더 백업' && echo '  npm run clean-processed - 처리된 이미지 삭제'",
    "generate-free-images": "node scripts/generateFreeImages.js",
    "regenerate-image": "node scripts/generateFreeImages.js",
    "generate-brand-graphics": "node scripts/generateBrandGraphics.js",
    "create-fallback-images": "node scripts/createFallbackImages.js",
    "image-complete-setup": "npm run generate-free-images && npm run generate-brand-graphics",
    "free-image-help": "echo '🆓 KHAKISHOP 무료 이미지 시스템:' && echo '' && echo '🎨 이미지 생성:' && echo '  npm run generate-free-images    - 전체 무료 이미지 세트 생성' && echo '  npm run regenerate-image hero hero-main \"custom+keyword\" - 개별 이미지 재생성' && echo '  npm run generate-brand-graphics - CSS/SVG 브랜드 그래픽 생성' && echo '' && echo '🔧 완전 설정:' && echo '  npm run image-complete-setup    - 모든 이미지 시스템 한번에 설정' && echo '  npm run create-fallback-images  - CSS 기반 폴백 이미지 생성' && echo '' && echo '📄 라이선스: Unsplash (100% 상업적 이용 가능)'",
    "auto-generate-all-images": "node scripts/autoGenerateAllImages.js",
    "regenerate-single-image": "node scripts/autoGenerateAllImages.js regenerate",
    "complete-image-automation": "npm run auto-generate-all-images",
    "image-automation-help": "echo '🎨 KHAKISHOP 148개 이미지 완전 자동화:' && echo '' && echo '🚀 전체 자동화:' && echo '  npm run auto-generate-all-images     - 148개 이미지 완전 자동 생성' && echo '  npm run complete-image-automation    - 전체 이미지 자동화 실행' && echo '' && echo '🔧 개별 관리:' && echo '  npm run regenerate-single-image 1   - 1번 이미지 재생성' && echo '  npm run regenerate-single-image 15  - 15번 이미지 재생성' && echo '' && echo '📊 결과 확인:' && echo '  open http://localhost:3000/image-complete-preview.html' && echo '' && echo '⏱️ 예상 시간: 전체 생성 약 10-15분' && echo '🏷️ 메타데이터: \"By khaki shop\" 자동 삽입' && echo '📄 라이선스: 100% 무료 상업용'",
    "replace-images": "node scripts/replaceImages.js",
    "setup-images": "npm run replace-images && echo '🎨 이미지 교체 및 메타데이터 자동 적용 완료!'",
    "batch-placement": "node scripts/batch-image-placement.js",
    "curtain-batch": "npm run batch-placement && echo '🏷️ 커튼 이미지 배치 완료!'",
    "batch-help": "echo '🎯 KHAKISHOP 이미지 배치 자동화:' && echo '' && echo '🚀 메인 명령어:' && echo '  npm run batch-placement  - 미드저니 17-26.png → 커튼 카테고리 자동 배치' && echo '  npm run curtain-batch     - 배치 + 완료 메시지' && echo '' && echo '✨ 자동 기능:' && echo '  📁 폴더 자동 생성' && echo '  💾 기존 파일 백업 (backup/images/)' && echo '  📊 상세 실행 로그' && echo '  ✅ 검증 리포트 제공' && echo '' && echo '📂 배치 경로:' && echo '  17-18.png → modern-sheer-series/' && echo '  19-22.png → venetian-premium-line/' && echo '  23-26.png → wood-texture-natural/'",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "monitoring:start": "node -e \"console.log('🔍 모니터링 초기화...'); require('./src/lib/monitoring').initializeSentry(); console.log('✅ 모니터링 준비 완료');\"",
    "web-vitals": "node scripts/web-vitals.js",
    "quick-check": "npm run lint && npm run health-check",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx}\"",
    "pre-commit-check": "npm run lint -- --max-warnings=0 && npm run test && npm run health-check",
    "fix-all": "npm run format && npm run lint -- --fix",
    "process-reference-images": "node scripts/processReferenceImages.js",
    "type-check": "tsc --noEmit",
    "auto-diagnose": "node scripts/auto-diagnose.js",
    "generate-placeholder-images": "node scripts/generate-placeholder-images.js",
    "generate-midjourney-prompts": "node scripts/generate-midjourney-prompts.js",
    "status": "node status-dashboard.js",
    "status:dashboard": "node status-dashboard.js dashboard",
    "status:monitor": "node status-dashboard.js monitor",
    "status:health": "node status-dashboard.js health",
    "status:update": "node status-dashboard.js update",
    "status:resolve": "node status-dashboard.js resolve",
    "status:help": "echo '🎯 KHAKISHOP 상태 추적 시스템:' && echo '' && echo '📊 상태 확인:' && echo '  npm run status           - 실시간 대시보드 표시' && echo '  npm run status:dashboard - 대시보드 표시 (기본)' && echo '  npm run status:health    - 헬스체크 실행' && echo '' && echo '🔄 실시간 모니터링:' && echo '  npm run status:monitor   - 30초마다 자동 업데이트' && echo '' && echo '⚡ 작업 관리:' && echo '  npm run status:update contentManagement COMPLETE 90  - 작업 상태 업데이트' && echo '  npm run status:resolve homepageError  - 이슈 해결 처리' && echo '' && echo '📋 현재 상태:' && echo '  ✅ 완성된 시스템: 5개 (JWT, 이미지, 라우팅, 어드민, NPM)' && echo '  🚧 진행 중: 3개 (CMS 80%, SEO 85%, 제품 70%)' && echo '  🚨 Critical Issues: 47개 (이미지 누락, 홈페이지 에러)' && echo '  📈 전체 진행률: 63%'",
    "test:e2e:report": "playwright show-report",
    "test:performance": "playwright test tests/e2e/performance.spec.ts",
    "perf:quick": "node scripts/performance-monitor.js quick",
    "perf:full": "node scripts/performance-monitor.js full",
    "perf:health": "node scripts/performance-monitor.js health",
    "perf:lighthouse": "node scripts/performance-monitor.js lighthouse",
    "perf:report": "node scripts/performance-monitor.js report",
    "perf:thresholds": "node scripts/performance-monitor.js thresholds"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@next/third-parties": "^14.2.15",
    "@notionhq/client": "^3.1.3",
    "@sentry/nextjs": "^9.27.0",
    "@types/react-window": "^1.8.8",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "bcryptjs": "^3.0.2",
    "critters": "^0.0.23",
    "framer-motion": "^12.18.1",
    "jose": "^6.0.11",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.522.0",
    "next": "14.1.3",
    "next-intl": "^4.1.0",
    "next-pwa": "^5.6.0",
    "next-sitemap": "^4.2.3",
    "quill": "^2.0.3",
    "react": "^18",
    "react-dom": "^18",
    "react-quill": "^2.0.0",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "sharp": "^0.34.2",
    "vercel": "^42.3.0",
    "web-vitals": "^5.0.2",
    "workbox-webpack-plugin": "^7.3.0"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@emotion/is-prop-valid": "^1.3.1",
    "@playwright/test": "^1.52.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20.19.1",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "autoprefixer": "^10.0.1",
    "eslint": "^8",
    "eslint-config-next": "14.1.3",
    "eslint-plugin-tailwindcss": "^3.18.0",
    "husky": "^9.1.7",
    "js-yaml": "^4.1.0",
    "lighthouse": "^12.6.1",
    "lint-staged": "^16.1.0",
    "postcss": "^8",
    "prettier": "^3.5.3",
    "tailwindcss": "^3.3.0",
    "typescript": "^5"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
