name: 🏥 KHAKISHOP CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # 매주 일요일 오전 9시에 성능 검사 실행
    - cron: '0 9 * * 0'
  workflow_dispatch: # 수동 실행 허용

env:
  NODE_VERSION: '18'

jobs:
  # ================================================================================
  # 🔍 Health Check & Quality Assurance
  # ================================================================================
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏥 Run health check
        run: npm run health-check
        
      - name: 📋 Run linting
        run: npm run lint
        
      - name: 🔧 Check TypeScript
        run: npx tsc --noEmit

  # ================================================================================
  # 🔨 Build & Test
  # ================================================================================
  build:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    needs: health-check
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔨 Build application
        run: npm run build
        
      - name: 💾 Cache build artifacts
        uses: actions/cache@v3
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  # ================================================================================
  # 🧪 E2E Testing (조건부 실행)
  # ================================================================================
  e2e-test:
    name: 🧪 E2E Tests
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps
        
      - name: 🔨 Build application
        run: npm run build
        
      - name: 🧪 Run E2E tests
        run: npm run test:e2e
        
      - name: 📄 Upload test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # ================================================================================
  # 🚀 Deployment Status Check
  # ================================================================================
  deployment-ready:
    name: ✅ Deployment Ready
    runs-on: ubuntu-latest
    needs: [health-check, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 🎉 All checks passed
        run: |
          echo "🎉 All quality checks passed!"
          echo "✅ Health check: PASSED"
          echo "✅ Build: PASSED"
          echo "🚀 Ready for deployment!"

  # ================================================================================
  # 📊 Performance Audit (주간 실행)
  # ================================================================================
  performance-audit:
    name: 📊 Performance Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔨 Build application
        run: npm run build
        
      - name: 🚀 Start server
        run: npm start &
        
      - name: ⏳ Wait for server
        run: sleep 10
        
      - name: 🏃 Run Lighthouse audit
        run: npm run lighthouse
        
      - name: 📄 Upload Lighthouse report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: test-results/
          retention-days: 30 